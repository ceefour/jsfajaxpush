<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>id.co.bippo</groupId>
	<artifactId>jsfajaxpush-icefaces</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>jsfajaxpush-icefaces</name>
	<description>jsfajaxpush-icefaces</description>
	<url>http://www.bippo.co.id/</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<slf4j.version>1.6.1</slf4j.version>
		<junit.version>4.8.2</junit.version>
		<shiro.version>1.1.0</shiro.version>
		
		<seam.version>3.0.0.Final</seam.version>
		<ice.version>2.0.1</ice.version>
		
		<!-- To set the jboss.home environment variable the Maven way, set the 
			jboss.home property in an active profile in the Maven 2 settings.xml file -->
		<jboss.home>${env.JBOSS_HOME}</jboss.home>
		<jboss.domain>default</jboss.domain>
	</properties>

	<repositories>
		<!-- Several key Java EE APIs and RIs (like com.sun.faces:jsf-api) are 
			missing from the Maven Central Repository -->
        <!-- The goal is to eventually eliminate the reliance on the JBoss repository -->
        <repository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Maven Repository Group</name>
            <url>https://repository.jboss.org/nexus/content/groups/public/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <!--<repository>
            <id>repository.jboss.org-releases</id> 
            <name>JBoss Releases Repository</name>
            <url>https://repository.jboss.org/nexus/content/repositories/releases</url> 
        </repository>
        <repository>
            <id>java.net-m2</id>
            <name>java.net Maven 2 Repository</name> 
            <url>http://download.java.net/maven/2</url>
        </repository>-->
        <repository>
            <id>icefaces</id>
            <url>http://anonsvn.icefaces.org/repo/maven2/releases</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
	</repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Maven Repository Group</name>
            <url>https://repository.jboss.org/nexus/content/groups/public/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

	<dependencyManagement>
		<dependencies>
			<!-- Import scope will provide versions for dependencies below. -->
			<dependency>
				<groupId>org.jboss.seam</groupId>
				<artifactId>seam-bom</artifactId>
				<version>${seam.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- CDI (JSR-299) -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- EJB -->
		<dependency>
			<groupId>org.jboss.ejb3</groupId>
			<artifactId>jboss-ejb3-api</artifactId>
			<scope>provided</scope>
			<version>3.1.0</version>
		</dependency>
		<!-- Common annotations (e.g., @PostConstruct, @PreDestroy, @Generated, 
			@Resource) -->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>
		<!-- Bean Validation (JSR-303) -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- Bean Validation Implementation -->
		<!-- Provides portable constraints such as @NotEmpty, @Email and @Url -->
		<!-- Hibernate Validator is only the JSR-303 implementation at the moment, 
			so we can assume it's provided -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.1.0.Final</version>
			<scope>provided</scope>
		</dependency>
		<!-- JSF -->
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>2.0.5-b02</version>
<!-- 			<version>2.1.1-b04</version> -->
			<scope>provided</scope>
		</dependency>
		<!-- JPA -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.0.Final</version>
			<scope>provided</scope>
		</dependency>
		<!-- JAX-RS -->
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>jsr311-api</artifactId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.seam.solder</groupId>
			<artifactId>seam-solder</artifactId>
		</dependency>
		<!-- Seam Faces -->
<!-- 		<dependency> -->
<!-- 			<groupId>joda-time</groupId> -->
<!-- 			<artifactId>joda-time</artifactId> -->
<!-- 			<version>1.6.2</version> -->
<!-- 		</dependency> -->
<!-- 		<dependency> -->
<!-- 			<groupId>com.ocpsoft</groupId> -->
<!-- 			<artifactId>prettyfaces-jsf2</artifactId> -->
<!-- 			<version>3.2.1</version> -->
<!-- 		</dependency> -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.jboss.seam.catch</groupId> -->
<!-- 			<artifactId>seam-catch</artifactId> -->
<!-- 		</dependency> -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.jboss.seam.faces</groupId> -->
<!-- 			<artifactId>seam-faces</artifactId> -->
<!-- 			<version>3.0.1.Final</version> -->
<!-- 		</dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.jboss.seam.persistence</groupId> -->
		<!-- <artifactId>seam-persistence-api</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.jboss.seam.persistence</groupId> -->
		<!-- <artifactId>seam-persistence-impl</artifactId> -->
		<!-- <scope>runtime</scope> -->
		<!-- </dependency> -->

		<!-- Needed to compile otherwise Scala compiler will complain -->
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>el-impl</artifactId>
			<version>2.1.2-b05</version>
			<scope>provided</scope>
		</dependency>

		<!-- Needed on JBoss AS as EL is out of date?? -->
		<!--<dependency> <groupId>org.glassfish.web</groupId> <artifactId>el-impl</artifactId> 
			<scope>runtime</scope> -->
		<!-- FIXME this version should be in the Weld API BOM -->
		<!-- <version>2.1.2-b05</version> -->
		<!--<exclusions> <exclusion> <groupId>javax.el</groupId> <artifactId>el-api</artifactId> 
			</exclusion> </exclusions> </dependency> -->

		<!-- Logging with SLF4J to app server's JUL -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>

       <dependency>
           <groupId>org.icefaces</groupId>
           <artifactId>icefaces-compat</artifactId>
           <version>${ice.version}</version>
           <exclusions>
               <exclusion>
                   <groupId>javax.servlet</groupId>
                   <artifactId>servlet-api</artifactId>
               </exclusion>
               <exclusion>
                   <groupId>javax.el</groupId>
                   <artifactId>el-api</artifactId>
               </exclusion>
               <exclusion>
               	<artifactId>commons-logging</artifactId>
               	<groupId>commons-logging</groupId>
               </exclusion>
               <exclusion>
               	<artifactId>jsf-impl</artifactId>
               	<groupId>com.sun.faces</groupId>
               </exclusion>
           </exclusions>
       </dependency>
        <dependency>
            <groupId>org.icepush</groupId>
            <artifactId>icepush</artifactId>
            <version>${ice.version}</version>
        </dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- M2eclipse bug prevents overlay war to be loaded on IDE run -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.atmosphere</groupId> -->
<!-- 			<artifactId>atmosphere-jquery</artifactId> -->
<!-- 			<version>0.7.1</version> -->
<!-- 			<type>war</type> -->
<!-- 			<scope>runtime</scope> -->
<!-- 		</dependency> -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>${shiro.version}</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/java-gen</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Compiler plugin enforces Java 1.6 compatiblity -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration></configuration>
			</plugin>

			<!-- Eclipse plugin can force download of source and JavaDoc jars -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<wtpversion>2.0</wtpversion>
					<!-- <downloadSources>true</downloadSources> <downloadJavadocs>true</downloadJavadocs> -->
				</configuration>
			</plugin>

			<!-- Configure the JBoss AS Maven deploy plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jboss-maven-plugin</artifactId>
				<configuration>
					<jbossHome>${jboss.home}</jbossHome>
					<serverName>${jboss.domain}</serverName>
					<fileNames>
						<fileName>${project.build.directory}/${project.build.finalName}.war</fileName>
					</fileNames>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<useFile>false</useFile>
					<disableXmlReport>true</disableXmlReport>
					<!-- If you have classpath issue like NoDefClassError,... -->
					<!-- useManifestOnlyJar>false</useManifestOnlyJar -->
					<!--<includes>
						<include>**/*Test.*</include>
						<include>**/*Suite.*</include>
					</includes>-->
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>